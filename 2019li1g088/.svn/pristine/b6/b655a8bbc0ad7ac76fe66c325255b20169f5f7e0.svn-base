-- | Este módulo define funções comuns da Tarefa 5 do trabalho prático.
module Main where

import LI11920
import Tarefa4_2019li1g088
import Graphics.Gloss
--import Graphics.Gloss.Juicy
import Graphics.Gloss.Interface.Pure.Game

-- * Tipos de dados auxiliares
type Pictures = [Picture]
type EstadoGloss = (Float,Float,Pictures)

estadoGlossInicial::Pictures->EstadoGloss
estadoGlossInicial l1 = (0,0,l1)

-- | Display full screen
ecra::Display
ecra = FullScreen

-- | frame
frame::Int
frame = 20 --- modificar valor-- talvez 60?!

--x inicial
linha::Float
linha = 20 ---defenir depois valor

--y inicial
coluna::Float
coluna = 300 --defenir melhor

espaco::Float
espaco = 20 -- defenir depois

desenhaMapa::Estado->Pictures->Pictures
desenhaMapa (Estado m j) li = defenirMapa m linha coluna li

defenirMapa::Mapa->Float->Float->Pictures->Pictures
defenirMapa [] _ _ _ = []
defenirMapa (a:b) x y li = (defenirLinha a x y li) ++ defenirMapa b x (y-espaco)

defenirLinha:: [Peca]->Float->Float->Pictures->Pictures
defenirLinha [] _ _ _ = []
defenirLinha (m:n) x y li = (desenharPeca m x y li):(defenirLinha n (x+l) y li)

desenharPeca::Peca->Float->Float->Pictures->Pictures
desenharPeca = undefined


reageAoTempo::Float->EstadoGloss->EstadoGloss
reageAoTempo t (x,y,li) = (x,y,li)

reageAoMOvimento::Event->EstadoGloss->EstadoGloss
-- | Teclas do joagdor 2
reageAoMOvimento (EventKey (Char 'w') Down _ _) (x,y,li) = (x,y+20,li)
reageAoMOvimento (EventKey (Char 's') Down _ _) (x,y,li) = (x,y-20,li)
reageAoMOvimento (EventKey (Char 'd') Down _ _) (x,y,li) = (x+20,y,li)
reageAoMOvimento (EventKey (Char 'a') Down _ _) (x,y,li) = (x-20,y,li)
reageAoMOvimento _ q=q

desenhaMapa::EstadoGloss->Picture
desenhaMapa (x,y,li) = Pictures[m]
                    where m = Translate x y (head li)


-- | Função principal da Tarefa 5.
--
-- __NB:__ Esta Tarefa é completamente livre. Deve utilizar a biblioteca <http://hackage.haskell.org/package/gloss gloss> para animar o jogo, e reutilizar __de forma completa__ as funções das tarefas anteriores.
main :: IO ()
main = do
    m <- loadBMP "Imagens/aa.bmp"
    play ecra                              -- minha janela do jogo
        black                              -- cor do fundo do ecra
        frame                              -- frame rate
        (estadoGlossInicial [m])             --estado inicial
        desenhaMapa
        reageAoMOvimento                   --reage ao movimento
        reageAoTempo                       -- reage ao tempo




